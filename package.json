{
  "scripts": {
    "lint": "eslint --no-error-on-unmatched-pattern * && prettier --check .",
    "lint:watch": "nodemon -e ts --exec \"clear; yarn lint\"",
    "format": "prettier .",

    "dev": "docker compose -f infra/docker/docker-compose.database.yml up",
    "undev": "docker compose -f infra/docker/docker-compose.database.yml down --remove-orphans",
    "build": "yarn build:database & yarn build:server & yarn build:web & wait; echo \"Lexico built!\"",
    "start": "docker compose -f infra/docker/docker-compose.database.yml -f infra/docker/docker-compose.yml up",
    "stop": "docker compose -f infra/docker/docker-compose.database.yml -f infra/docker/docker-compose.yml down --remove-orphans",

    "build:web": "DOCKER_BUILDKIT=1 docker build -f infra/docker/web.Dockerfile -t jimmypaolini/lexico-web .",
    "build:web:small": "DOCKER_BUILDKIT=1 docker build --build-arg FULL_BUILD=false -f infra/docker/web.Dockerfile -t jimmypaolini/lexico-web .",
    "build:server": "DOCKER_BUILDKIT=1 docker build -f infra/docker/server.Dockerfile -t jimmypaolini/lexico-server .",
    "build:database": "docker image pull postgres:13",

    "apply:web:dev": "kubectl apply -f infra/kubernetes/dev/web.yaml -n lexico-dev",
    "apply:server:dev": "kubectl apply -f infra/kubernetes/dev/server.yaml -n lexico-dev",
    "apply:env:dev": "kubectl apply -f infra/kubernetes/dev/.env.yaml -n lexico-dev",
    "apply:database:dev": "sh infra/scripts/deploy:database:dev.sh",
    "apply:nginx:dev": "helm install nginx-dev ingress-nginx/ingress-nginx -f infra/helm/dev/nginx.yaml -n lexico-dev",
    "apply:ingress:dev": "kubectl apply -f infra/kubernetes/dev/ingress.yaml -n lexico-dev",
    "update:nginx:dev": "helm upgrade nginx-dev ingress-nginx/ingress-nginx -f infra/helm/dev/nginx.yaml -n lexico-dev",
    "apply:web": "kubectl apply -f infra/kubernetes/web.yaml",
    "apply:server": "kubectl apply -f infra/kubernetes/server.yaml",
    "apply:env": "kubectl apply -f infra/kubernetes/.env.yaml",
    "apply:database": "sh infra/scripts/deploy:database.sh",
    "apply:nginx": "helm install nginx ingress-nginx/ingress-nginx -f infra/helm/nginx.yaml",
    "apply:ingress": "kubectl apply -f infra/kubernetes/ingress.yaml",
    "apply:elasticsearch": "helm install elasticsearch elastic/elasticsearch -n logging -f infra/helm/elasticsearch.yaml",
    "apply:fluentbit": "helm install fluentbit fluent/fluent-bit -n logging -f infra/helm/fluentbit.yaml",
    "apply:kibana": "helm install kibana elastic/kibana -n logging -f infra/helm/kibana.yaml",
    "apply:monitoring": "helm install monitoring prometheus-community/kube-prometheus-stack -n monitoring",

    "update:web": "kubectl rollout restart deployment web",
    "update:server": "kubectl rollout restart deployment server",
    "update:database": "sh infra/scripts/update:database.sh",
    "update:nginx": "helm upgrade nginx ingress-nginx/ingress-nginx -f infra/helm/nginx.yaml",
    "update:elasticsearch": "helm upgrade elasticsearch elastic/elasticsearch -n logging -f infra/helm/elasticsearch.yaml",
    "update:fluentbit": "helm upgrade fluentbit fluent/fluent-bit -n logging -f infra/helm/fluentbit.yaml",
    "update:kibana": "helm upgrade kibana elastic/kibana -n logging -f infra/helm/kibana.yaml",
    "update:monitoring": "helm upgrade monitoring prometheus-community/kube-prometheus-stack -n monitoring"
  },
  "dependencies": {
    "dotenv": "^8.2.0",
    "dotenv-expand": "^5.1.0",
    "graphql": "^15.5.0",
    "jsonwebtoken": "^8.5.1",
    "number-to-words": "^1.2.4",
    "type-graphql": "^1.1.1",
    "typeorm": "^0.2.31",
    "winston": "^3.3.3"
  },
  "devDependencies": {
    "@graphql-eslint/eslint-plugin": "^2.0.2",
    "@next/eslint-plugin-next": "^11.1.0",
    "@types/graphql": "^14.5.0",
    "@types/node": "^14.14.11",
    "@types/number-to-words": "^1.2.0",
    "@typescript-eslint/eslint-plugin": "^4.28.1",
    "@typescript-eslint/parser": "^4.28.1",
    "class-validator": "^0.12.2",
    "eslint": "^7.23.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-react": "^7.24.0",
    "prettier": "^2.2.1",
    "ts-node": "^9.1.1",
    "typescript": "^4.2.2"
  },
  "bugs": {
    "url": "https://github.com/JimmyPaolini/Lexico/issues"
  },
  "homepage": "https://www.lexicolatin.com",
  "name": "lexico",
  "author": "Jimmy Paolini",
  "description": "Latin Language Interface",
  "repository": "https://github.com/JimmyPaolini/Lexico",
  "version": "2.0.0",
  "license": "MIT"
}
